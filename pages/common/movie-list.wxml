<import src="/components/score/score" />
<!-- 渲染普通的单页数据 -->
<!-- 例如:https://api.douban.com/v2/movie/top250?count=1 -->
<template name="item1">
	<navigator url="../item/item?id={{item.id}}">
		<view class="item">
			<image class="poster" src="{{item.images.small}}"></image>
			<view class="meta">
				<view class="title">{{item.title}}<text class="year">({{item.year}})</text></view>
        <view class="rating">
          <score keys="{{item.rating.average}}" fontsize="20" color="gold" max="{{10}}"></score>
          <text>{{item.rating.average}}</text>
        </view>
        <view class="info">{{item.year}} / <block wx:for="{{item.pubdates}}" >{{item}} </block>/ <block wx:for="{{item.genres}}" wx:key="id">{{item}} </block>/ <block wx:for="{{item.directors}}" wx:key="id">{{item.name}} </block>/ <block wx:for="{{item.casts}}" wx:key="id">{{item.name}} </block></view>
      </view>
		</view>
	</navigator>
</template>
<!-- 北美电影排行榜的api中数据格式与普通的api不同，这里是渲染北美电影排行榜的数据 -->
<!-- 例如： https://api.douban.com/v2/movie/us_box?count=1 -->
<template name="item2">
  <navigator url="../item/item?id={{item.subject.id}}">
    <view class="item">
      <image class="poster" src="{{item.subject.images.small}}"></image>
      <view class="meta">
        <view class="title">{{item.subject.title}}<text class="year">({{item.subject.year}})</text></view>
        <view class="rating">
          <score keys="{{item.subject.rating.average}}" fontsize="20" color="gold"></score>
          <text>{{item.subject.rating.average}}</text>
        </view>
        <view class="info">{{item.subject.year}} / <block wx:for="{{item.subject.pubdates}}" >{{item}} </block>/ <block wx:for="{{item.subject.genres}}" wx:key="id">{{item}} </block>/ <block wx:for="{{item.subject.directors}}" wx:key="id">{{item.name}} </block>/ <block wx:for="{{item.subject.casts}}" wx:key="id">{{item.name}} </block></view>
      </view>
      <!-- 使用前先引入score组件-->
    </view>
  </navigator>
</template>

<!-- 电影列表展示组件 -->
<template name="movie-list">
  <view class="list">
    <!-- wx:for 指定名字用data -->
    <template is="{{item.subject ? 'item2' : 'item1'}}" data="{{item}}" wx:for="{{movies}}" wx:key="id" />
    <view class="tips">
      <view wx:if="{{hasMore}}">
        <image src="/images/loading.gif" mode="aspectFill"></image>
        <text>拼命加载中...</text>
      </view>
      <view wx:else>
        <text>没有更多内容了</text>
      </view>
    </view>
  </view>
  <loading hidden="{{!loading}}">加载中..</loading>
</template>